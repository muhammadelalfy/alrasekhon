<?php

namespace App\Http\Controllers{{namespace}};

use App\Http\Requests\Api{{apiNamespace}}\{{modelName}}Request;
use App\Models\{{modelName}};
use App\Repositories\Contracts\{{modelName}}Contract;

class {{modelName}}Controller
{
    /**
     * {{modelName}}Controller constructor.
     * @param {{modelName}}Contract $repository
     */
    public function __construct({{modelName}}Contract $repository)
    {
        parent::__construct($repository, 'routeNameValue', 'viewPathValue','permission');
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $filters = [];

         ${{modelObject}}List = $this->repository->search($filters, [], true, true, 10, 'id', 'desc');

        if (request()->ajax()){
            return $this->loadPageAjax(['{{modelObject}}List' => ${{modelObject}}List]);
        }

        return $this->indexBlade(['{{modelObject}}List' => ${{modelObject}}List]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return $this->createBlade();
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param {{modelName}}Request $request
     *
     * @return \Illuminate\Http\Response
     */
    public function store({{modelName}}Request $request)
    {
        $this->repository->create($request->all());

        toast(__('{{modelName}} added successfully'), 'success', 'top-left');
        return $this->redirectBack();
    }

    /**
     * Display the specified resource.
     *
     * @param {{modelName}} ${{modelObject}}
     *
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\View\View
     */
    public function show({{modelName}} ${{modelObject}})
    {
        return $this->showBlade(['{{modelObject}}' => ${{modelObject}}]);
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param {{modelName}} ${{modelObject}}
     *
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\View\View
     */
    public function edit({{modelName}} ${{modelObject}})
    {
        return $this->editBlade(['{{modelObject}}' => ${{modelObject}}]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param {{modelName}}Request $request
     * @param {{modelName}} ${{modelObject}}
     *
     * @return \Illuminate\Http\RedirectResponse
     */
    public function update({{modelName}}Request $request, {{modelName}} ${{modelObject}})
    {
        $this->repository->update(${{modelObject}}, $request->all());

        toast(__('{{modelName}} updated successfully'), 'success', 'top-left');
        return $this->redirectBack();
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param {{modelName}} ${{modelObject}}
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function destroy({{modelName}} ${{modelObject}})
    {
        if ($this->repository->relatedData(${{modelObject}}) == 0) {
            $this->repository->remove(${{modelObject}});
            return ajax_response(null, __('{{modelName}} deleted successfully'));
        } else {
            return ajax_response(null, __('Can not delete this {{modelObject}}'), 400);
        }
    }
}
